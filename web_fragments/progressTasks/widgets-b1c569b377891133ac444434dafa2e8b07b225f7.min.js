
(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTitle',function(){return{template:'<h1 ng-if="\'Level 1\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h1>\n<h2 ng-if="\'Level 2\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h2>\n<h3 ng-if="\'Level 3\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h3>\n<h4 ng-if="\'Level 4\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h4>\n<h5 ng-if="\'Level 5\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h5>\n<h6 ng-if="\'Level 6\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h6>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbText',function(){return{template:'<p ng-if="properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind-html="properties.text | uiTranslate"></p>\n<p ng-if="!properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind="properties.text | uiTranslate"></p>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('customProgressBar',function(){return{controllerAs:'ctrl',controller:function($scope){var format="YYYY-MM-DD HH:mm:ss";var values={};init();$scope.isExecuted=function(){return $scope.properties.value.archivedDate&&$scope.properties.value.archivedDate!=="";}
$scope.isAssigned=function(){return $scope.properties.value.assigned_date&&$scope.properties.value.assigned_date!=="";}
$scope.getSize=function(item){return values[item];}
function init(){console.log("init")
var ready=$scope.properties.value.reached_state_date;var assigned=$scope.properties.value.assigned_date;var archived=$scope.properties.value.archivedDate;if(archived&&archived!==""){var wait=moment(assigned,format).diff(moment(ready,format));var exec=moment(archived,format).diff(moment(assigned,format));var total=moment(archived,format).diff(moment(ready,format));console.log(wait,exec,total)
values.wait=wait/total*100;values.exec=exec/total*100;values.total=Math.floor(moment.duration(total).asHours())+moment.utc(total).format(":mm:ss");}else{if(assigned&&assigned!==""){var wait=moment(assigned,format).diff(moment(ready,format));var exec=moment().diff(moment(assigned,format));var total=moment().diff(moment(ready,format));values.wait=wait/total*100;values.exec=exec/total*100;values.total=Math.floor(moment.duration(total).asHours())+moment.utc(total).format(":mm:ss");}else{var total=moment().diff(moment(ready,format));values.unas=100
values.total=Math.floor(moment.duration(total).asHours())+moment.utc(total).format(":mm:ss");console.log(values);}}}},template:'<div class="progress">\n  <div ng-if="isAssigned()" class="progress-bar progress-bar-warning" style="width: {{getSize(\'wait\')}}%">\n    <span class="sr-only">Waiting (warning)</span>\n  </div>\n  <div ng-if="isExecuted()" class="progress-bar progress-bar-success" style="width: {{getSize(\'exec\')}}%">\n    <span class="sr-only">On Execution</span>\n  </div>\n  <div ng-if="!isAssigned()" class="progress-bar progress-bar-danger progress-bar-striped" style="width: {{getSize(\'unas\')}}%">\n    <span class="sr-only">Not yet Assigned</span>\n  </div>\n  <div ng-if="!isExecuted()" class="progress-bar progress-bar-success progress-bar-striped" style="width: {{getSize(\'exec\')}}%">\n    <span class="sr-only">Not yet Assigned</span>\n  </div>\n</div>\n<p>Total Hours:{{getSize(\'total\')}}</p>\n'};});