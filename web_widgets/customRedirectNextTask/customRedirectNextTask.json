{
  "designerVersion" : "1.2.9",
  "id" : "customRedirectNextTask",
  "name" : "redirectNextTask",
  "lastUpdate" : 1559127173294,
  "template" : "",
  "controller" : "function($scope, $interval, $window, $http, $modal) {\n  console.debug(\"Start to initialize redirect to next task widget\");\n\n  var ctrl = this;\n\n  // Hide the message to notify the user that we searching for next task\n  $scope.display = \"display:none\";\n\n  // Is it the first time the value of \"submit button successful response value\" change?\n  // We need to ignore the first change\n  ctrl.firstTime = true;\n\n  // Current user id\n  var userId;\n\n  // Current case id\n  var caseId;\n\n  // Get current user id by performing a call to /API/system/session\n  $http.get('/' + $scope.properties.bonitaWebAppName + '/API/system/session/1').\n  success(function(data, status, header, config) {\n    // Get the user id from REST API call answer\n    userId = data.user_id;\n  }).\n  error(function(data, status, headers, config) {\n    console.error(\"Fail to get user id\");\n    redirectFallback();\n    return;\n  });\n\n  // If task id is provided use it to get case id\n  if($scope.properties.taskId) {\n    // Get the current case id using the provide task id\n    $http.get('/' + $scope.properties.bonitaWebAppName + '/API/bpm/flowNode/' + $scope.properties.taskId).\n    success(function(data, status, header, config) {\n      // Get the user id from REST API call answer\n      caseId = data.caseId;\n    }).\n    error(function(data, status, headers, config) {\n      console.error(\"Fail to get case id\");\n      redirectFallback();\n      return;\n    });\n  }\n\n  console.debug(\"Redirect to next task widget initialized\");\n\n  // We watch the variable to trigger code execution when we get a successful response from the submit task REST call\n  $scope.$watch('properties.submitButtonSuccessfulResponseValue', function() {\n\n    console.debug(\"submitButtonSuccessfulResponseValue changed to: \" + $scope.properties.submitButtonSuccessfulResponseValue);\n\n    // Ignore the first modification of the watched variable\n    if (!ctrl.firstTime) {\n      console.debug(\"Starting search for next task\");\n\n      // Display the message to the user while we searching for next task\n      $scope.display = \"\";\n      $scope.warningModal();\n\n      // If we don't alrady get case id using task id we should be on instantiation form and so we can find case id in reponse value\n      if(!caseId) {\n        caseId = $scope.properties.submitButtonSuccessfulResponseValue.caseId;\n      }\n\n      // Try to find next task for current user until we reach the configured numberOfRetries\n      // Wait \"timeToWait\" between each try\n      var counter = 0, interval = $interval(function() {\n          console.debug(\"Begining of interval function\");\n\n          // Increment number of tries\n          counter++;\n\n          // If we reach the maximum number of retries\n          if (counter > $scope.properties.numberOfRetries) {\n            console.debug(\"Maximum number of retries reached: \" + $scope.properties.numberOfRetries);\n\n            // Cancel the periodic execution of the code to search for next task\n            $interval.cancel(interval);\n\n            // Redirect user to Portal\n            redirectFallback();\n          } else {\n            console.debug(\"Calling API to search for task for current user in curent case\");\n\n            // Call API to get pending task (limit result to one task) for current user in current case\n            $http.get('/' + $scope.properties.bonitaWebAppName + '/API/bpm/humanTask?c=1&p=0&f=state=ready&f=user_id=' + userId + '&f=caseId=' + caseId).\n            success(function(data, status, headers, config) {\n\n              // If we found one task for current user\n              if (data[0]) {\n                console.debug(\"Found next task. Assigning ti and redirect user to next task form...\");\n                \n                // Assign  next task to current user\n                $http.put('/' + $scope.properties.bonitaWebAppName + '/API/bpm/humanTask/' + data[0].id, {\n                  assigned_id: userId\n                });\n\n                // Redirect user to task form\n                $window.location.href = '/' + $scope.properties.bonitaWebAppName + '/portal/form/taskInstance/' + data[0].id;\n              }\n            }).\n            error(function(data, status, headers, config) {\n              console.debug(\"Fail to get next task\");\n\n              redirectFallback();\n            });\n\n          }\n        }, $scope.properties.timeToWait);\n\n        console.debug(\"End of searching for next task: \" + $scope.properties.timeToWait);\n    } else {\n      // This is the first time submitButtonSuccessfulResponseValue changed\n      ctrl.firstTime = false;\n    }\n  });\n\n  // Display the modal window to the user to notify that we search for next task\n  $scope.warningModal = function() {\n\n    var html = \"<div class=' panel-body alert alert-success' style='margin-bottom:0;'>\" + \"<div class='col-md-4 col-md-offset-4 ' style='top: 50%;'>\" + \"<i class='fa fa-spinner fa-spin'></i>\" + $scope.properties.messageDisplayed + \"</div>\" + \"</div>\";\n\n    $scope.myModal = $modal.open({\n      template: html,\n      backdrop: 'static'\n    });\n  };\n\n  // If we cannot find any task for current user or if searching for task failed redirect user to Portal\n  function redirectFallback() {\n    // Redirect to Bonita Portal as we didn't find task for current user\n    $window.top.location.href = '/' + $scope.properties.bonitaWebAppName;\n  }\n}\n",
  "custom" : true,
  "properties" : [ {
    "label" : "Time to wait (ms)",
    "name" : "timeToWait",
    "type" : "integer",
    "defaultValue" : 500,
    "bond" : "expression"
  }, {
    "label" : "Submit button successful response value",
    "name" : "submitButtonSuccessfulResponseValue",
    "type" : "text",
    "choiceValues" : [ "RebeccaPurple", "Chartreuse", "Tomato", "DeepSkyBlue" ],
    "bond" : "expression"
  }, {
    "label" : "Number of retries",
    "name" : "numberOfRetries",
    "type" : "integer",
    "defaultValue" : 8,
    "bond" : "expression"
  }, {
    "label" : "Bonita web app name",
    "name" : "bonitaWebAppName",
    "type" : "text",
    "defaultValue" : "bonita",
    "bond" : "expression"
  }, {
    "label" : "Task id (for task form only)",
    "name" : "taskId",
    "type" : "text",
    "defaultValue" : "taskId",
    "bond" : "expression"
  }, {
    "label" : "Message displayed",
    "name" : "messageDisplayed",
    "type" : "text",
    "defaultValue" : "Searching for current user next task in current case",
    "bond" : "expression"
  } ],
  "assets" : [ {
    "id" : "e4d39258-ee76-4fe3-879f-db275b35feba",
    "name" : "ui-bootstrap-tpls-0.13.0.min.js",
    "type" : "js",
    "order" : 1,
    "external" : false
  } ],
  "requiredModules" : [ "ui.bootstrap" ],
  "type" : "widget",
  "hasHelp" : false
}