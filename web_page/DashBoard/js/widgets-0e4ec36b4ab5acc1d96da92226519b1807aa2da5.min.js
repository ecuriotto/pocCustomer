
(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTitle',function(){return{template:'<h1 ng-if="\'Level 1\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h1>\n<h2 ng-if="\'Level 2\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h2>\n<h3 ng-if="\'Level 3\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h3>\n<h4 ng-if="\'Level 4\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h4>\n<h5 ng-if="\'Level 5\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h5>\n<h6 ng-if="\'Level 6\' === properties.level" class="text-{{ properties.alignment }}">{{properties.text | uiTranslate}}</h6>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbDataTable',function(){return{controllerAs:'ctrl',controller:function PbDataTableCtrl($scope,$http,$log,$filter){var vm=this;Object.defineProperty(vm,'jsonData',{'get':function(){var data=$filter('filter')(this.data||[],$scope.properties.filter||undefined);if(vm.sortOptions.property===undefined||vm.sortOptions.direction===undefined){return data;}
return $filter('orderBy')(data,vm.sortOptions.property,vm.sortOptions.direction);},'set':function(data){this.data=data;}});this.sortOptions={property:($scope.properties.sortColumns||[])[0],direction:false};this.pagination={currentPage:1,total:0};this.hasMultiColumns=function(){return Array.isArray($scope.properties.columnsKey);};this.isSelectable=function(){return $scope.properties.isBound('selectedRow');};this.createRequest=function(){var params={c:$scope.properties.pageSize,p:this.pagination.currentPage-1||0,s:$scope.properties.filter};if(this.sortOptions.property){params.o=this.sortOptions.property+' '+(this.sortOptions.direction?'DESC':'ASC');}
return{url:this.removeHandledParams($scope.properties.apiUrl),transformResponse:$http.defaults.transformResponse.concat(transformResponse),params:angular.extend({},$scope.properties.params||{},params)};};this.removeHandledParams=function(url){return['c','p'].reduce(function(acc,param){return acc.replace(new RegExp('(&'+param+'=[^&#]*([&#])?)','g'),'$2').replace(new RegExp('[?]'+param+'=[^&#]*&?','g'),'?');},url||'');};this.updateResultsFromAPI=function(){if($scope.properties.apiUrl){$http(vm.createRequest()).then(function(response){vm.results=response.data.results;vm.pagination=response.data.pagination;}).catch(function(error){$log.error(error);});}};this.updateResultsFromJson=function(){var start=(vm.pagination.currentPage-1)*$scope.properties.pageSize;var end=vm.pagination.currentPage*$scope.properties.pageSize;vm.results=vm.jsonData.slice(start,end);};this.sortHandler=function(){this.updateResults();};this.paginationHandler=function(){this.updateResults();};this.selectRowHandler=function(row){if(this.isSelectable()){$scope.properties.selectedRow=row;}};this.isColumnSortable=function(index){return $scope.properties.type==='Variable'||(angular.isArray($scope.properties.sortColumns)&&$scope.properties.sortColumns.indexOf($scope.properties.columnsKey[index])>-1);};function transformResponse(data,header){return{results:data,pagination:parseContentRange(header('Content-Range'))};}
function parseContentRange(strContentRange){if(strContentRange===null){return{};}
var arrayContentRange=strContentRange.split('/');var arrayIndexNumPerPage=arrayContentRange[0].split('-');return{total:parseInt(arrayContentRange[1],10),currentPage:parseInt(arrayIndexNumPerPage[0],10)+1};}
vm.updateResults=function(){if($scope.properties.type==='Variable'){vm.updateResultsFromJson();}else{vm.updateResultsFromAPI();}};$scope.$watch('[properties.pageSize, properties.apiUrl, properties.filter, properties.params]',resetPaginationAndUpdateResults,true);function resetPaginationAndUpdateResults(){vm.pagination={currentPage:1,total:vm.jsonData.length};vm.updateResults();}
$scope.$watchCollection('properties.content',function(data){if(!Array.isArray(data)){return;}
vm.jsonData=data;vm.pagination={currentPage:1,total:data.length};vm.updateResults();});},template:'<div class="table-responsive">\n    <table bonitable\n           sort-options="ctrl.sortOptions"\n           on-sort="ctrl.sortHandler()"\n           class="table table-striped" ng-class="{\'table-hover\': ctrl.isSelectable()}">\n        <thead>\n            <tr>\n                <th ng-repeat="header in properties.headers">\n                    <div ng-if="ctrl.isColumnSortable($index)" bo-sorter="{{properties.columnsKey[$index]}}">\n                            {{ header | uiTranslate }}\n                    </div>\n                    <div ng-if="!ctrl.isColumnSortable($index)">\n                        {{ header | uiTranslate }}\n                    </div>\n                </th>\n            </tr>\n        </thead>\n        <tbody ng-if="ctrl.hasMultiColumns()">\n        <tr ng-repeat="row in ctrl.results" ng-click="ctrl.selectRowHandler(row)"\n            ng-class="{\'info\': row === properties.selectedRow}">\n            <td ng-repeat="column in properties.columnsKey track by $index">\n                {{ $eval(column, row) | uiTranslate }}\n            </td>\n        </tr>\n        </tbody>\n        <tbody ng-if="!ctrl.hasMultiColumns()">\n        <tr ng-repeat="row in ctrl.results" ng-click="ctrl.selectRowHandler(row)"\n            ng-class="{\'info\': row === properties.selectedRow}">\n            <td> {{ row | uiTranslate }}</td>\n        </tr>\n        </tbody>\n    </table>\n    <div class="hidden-xs"\n         ng-repeat="options in [{\'maxSize\': 5, \'rotate\': false}]"\n         ng-include="\'/dataTable/pagination.html\'" >\n    </div>\n    <div class="visible-xs text-center"\n         ng-repeat="options in [{\'maxSize\': 3, \'rotate\': true}]"\n         ng-include="\'/dataTable/pagination.html\'" >\n    </div>\n\n    <script type="text/ng-template" id="/dataTable/pagination.html">\n        <pagination ng-if="ctrl.pagination.total > properties.pageSize"\n                    total-items="ctrl.pagination.total"\n                    items-per-page="properties.pageSize"\n                    direction-links="true"\n                    boundary-links="true"\n                    previous-text="&lsaquo;" next-text="&rsaquo;" first-text="&laquo;" last-text="&raquo;"\n                    rotate="{{options.rotate}}"\n                    max-size="{{options.maxSize}}"\n                    ng-model="ctrl.pagination.currentPage"\n                    ng-change="ctrl.paginationHandler()">\n        </pagination>\n    </script>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbText',function(){return{template:'<p ng-if="properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind-html="properties.text | uiTranslate"></p>\n<p ng-if="!properties.allowHTML" class="text-{{ properties.alignment }}" ng-bind="properties.text | uiTranslate"></p>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbInput',function(){return{controllerAs:'ctrl',controller:function PbInputCtrl($scope,$log,widgetNameFactory){'use strict';this.name=widgetNameFactory.getName('pbInput');if(!$scope.properties.isBound('value')){$log.error('the pbInput property named "value" need to be bound to a variable');}},template:'<div ng-class="{\n    \'form-horizontal\': properties.labelPosition === \'left\' && !properties.labelHidden,\n    \'row\': properties.labelPosition === \'top\' && !properties.labelHidden || properties.labelHidden\n    }">\n    <div class="form-group">\n        <label\n            ng-if="!properties.labelHidden"\n            ng-class="{ \'control-label--required\': properties.required }"\n            class="control-label col-xs-{{ !properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 12 }}" ng-bind-html="properties.label | uiTranslate">\n        </label>\n        <div class="col-xs-{{ 12 - (!properties.labelHidden && properties.labelPosition === \'left\' ? properties.labelWidth : 0) }}">\n            <input\n                type="{{properties.type}}"\n                class="form-control"\n                placeholder="{{ properties.placeholder | uiTranslate }}"\n                ng-model="properties.value"\n                ng-model-options="{ allowInvalid: true }"\n                name="{{ctrl.name}}"\n                ng-required="properties.required"\n                ng-minlength="properties.minLength"\n                ng-maxlength="properties.maxLength"\n                min="{{properties.min}}"\n                max="{{properties.max}}"\n                step="{{properties.step}}"\n                ng-readonly="properties.readOnly">\n            <div ng-messages="$form[ctrl.name].$dirty && $form[ctrl.name].$error " ng-messages-include="forms-generic-errors.html" role="alert"></div>\n        </div>\n    </div>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbChart',function(){return{controllerAs:'ctrl',controller:function PbChartCtrl($scope,$log,uiTranslateFilter){function isMultiSeriesChart(chartType){return["Line","Bar","Radar"].indexOf(chartType)>-1;}
function isFlatArray(array){return array&&array[0]&&!Array.isArray(array[0]);}
function translateArray(array){return(array||[]).map(function(item){return uiTranslateFilter(item);})}
$scope.$watch('properties.data',function(value){if(isMultiSeriesChart($scope.properties.type)&&isFlatArray($scope.properties.data)){$scope.data=[$scope.properties.data];}else{$scope.data=$scope.properties.data;}});$scope.$watch('properties.colors',function(value){$scope.colors=($scope.properties.colors||[]).length>0?$scope.properties.colors:null;});$scope.$watch('properties.options',function(value){if(angular.isString(value)){try{$scope.options=angular.fromJson(value);}catch(e){$log.error('[Chart widget] Advanced options property should be a valid json object, ex: { "animateRotate" : false }');}}else{$scope.options=value;}});$scope.$watch('properties.labels',function(labels){if(angular.isArray(labels)){$scope.labels=translateArray(labels);}else{$log.error('[Chart widget] Property named "labels" should be bound to an array');}});$scope.$watch('properties.setLabels',function(setLabels){if(angular.isArray(setLabels)){$scope.setLabels=translateArray(setLabels);}else{$log.error('[Chart widget] Property named "setLabels" should be bound to an array');}});},template:'<canvas ng-if="!environment"\n        class="chart-base"\n        chart-type="properties.type"\n        chart-data="data"\n        chart-labels="labels"\n        chart-legend="{{ !properties.legendHidden }}"\n        chart-series="setLabels"\n        chart-colours="colors"\n        chart-options="options">\n</canvas>\n<svg ng-if="environment" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 50 20">\n    <path d="M20.53 20H15v-5.045h5.53V20zm7.21-7.44h-5.584V20h5.584v-7.44zm7.156-3.262h-5.584V20h5.584V9.298zM35 0l-4.525.736.996.946-6.805 6.148-2.472-2.196-6.92 6.48 1.702 1.575 5.147-4.84 2.55 2.27 8.495-7.798.967.918L35 0z" fill="#ccc"/>\n</svg>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbButton',function(){return{controllerAs:'ctrl',controller:function PbButtonCtrl($scope,$http,$location,$log,$window,localStorageService){'use strict';var vm=this;this.action=function action(){if($scope.properties.action==='Remove from collection'){removeFromCollection();}else if($scope.properties.action==='Add to collection'){addToCollection();}else if($scope.properties.action==='Start process'){startProcess();}else if($scope.properties.action==='Submit task'){submitTask();}else if($scope.properties.url){doRequest($scope.properties.action,$scope.properties.url);}};function removeFromCollection(){if($scope.properties.collectionToModify){if(!Array.isArray($scope.properties.collectionToModify)){throw'Collection property for widget button should be an array, but was '+$scope.properties.collectionToModify;}
var index=-1;if($scope.properties.collectionPosition==='First'){index=0;}else if($scope.properties.collectionPosition==='Last'){index=$scope.properties.collectionToModify.length-1;}else if($scope.properties.collectionPosition==='Item'){index=$scope.properties.collectionToModify.indexOf($scope.properties.removeItem);}
if(index!==-1){$scope.properties.collectionToModify.splice(index,1);}}}
function addToCollection(){if(!$scope.properties.collectionToModify){$scope.properties.collectionToModify=[];}
if(!Array.isArray($scope.properties.collectionToModify)){throw'Collection property for widget button should be an array, but was '+$scope.properties.collectionToModify;}
var item=angular.copy($scope.properties.valueToAdd);if($scope.properties.collectionPosition==='First'){$scope.properties.collectionToModify.unshift(item);}else{$scope.properties.collectionToModify.push(item);}}
function startProcess(){var id=getUrlParam('id');if(id){var prom=doRequest('POST','../API/bpm/process/'+id+'/instantiation',getUserParam()).then(function(){localStorageService.delete($window.location.href);});}else{$log.log('Impossible to retrieve the process definition id value from the URL');}}
function doRequest(method,url,params){vm.busy=true;var req={method:method,url:url,data:angular.copy($scope.properties.dataToSend),params:params};return $http(req).success(function(data,status){$scope.properties.dataFromSuccess=data;notifyParentFrame({message:'success',status:status,dataFromSuccess:data});if($scope.properties.targetUrlOnSuccess&&method!=='GET'){redirectIfNeeded();}}).error(function(data,status){$scope.properties.dataFromError=data;notifyParentFrame({message:'error',status:status,dataFromError:data});}).finally(function(){vm.busy=false;});}
function redirectIfNeeded(){var iframeId=$window.frameElement?$window.frameElement.id:null;if(!iframeId||iframeId&&iframeId.indexOf('bonitaframe')!==0){$window.location.assign($scope.properties.targetUrlOnSuccess);}}
function notifyParentFrame(additionalProperties){if($window.parent!==$window.self){var dataToSend=angular.extend({},$scope.properties,additionalProperties);$window.parent.postMessage(JSON.stringify(dataToSend),'*');}}
function getUserParam(){var userId=getUrlParam('user');if(userId){return{'user':userId};}
return{};}
function getUrlParam(param){var paramValue=$location.absUrl().match('[//?&]'+param+'=([^&#]*)($|[&#])');if(paramValue){return paramValue[1];}
return'';}
function submitTask(){var id;id=getUrlParam('id');if(id){doRequest('POST','../API/bpm/userTask/'+getUrlParam('id')+'/execution',getUserParam()).then(function(){localStorageService.delete($window.location.href);});}else{$log.log('Impossible to retrieve the task id value from the URL');}}},template:'<div class="text-{{ properties.alignment }}">\n    <button\n        ng-class="\'btn btn-\' + properties.buttonStyle"\n        ng-click="ctrl.action()"\n        type="button"\n        ng-disabled="properties.disabled || ctrl.busy" ng-bind-html="properties.label | uiTranslate"></button>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbLink',function(){return{controllerAs:'ctrl',controller:function PbLinkCtrl($scope,$location,$window,httpParamSerializer){'use strict';this.getHref=function(){var appToken=getAppToken('app');if($scope.properties.type==='page'){return getPortalUrl()+'/apps/'+(appToken||'APP_TOKEN_PLACEHOLDER')+'/'+$scope.properties.pageToken+buildQueryString();}else if($scope.properties.type==='process'){return getPortalUrl()+'/portal/form/process/'+$scope.properties.processName+'/'+$scope.properties.processVersion+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='task'){return getPortalUrl()+'/portal/form/taskInstance/'+$scope.properties.taskId+buildQueryString(appToken?{app:appToken}:null);}else if($scope.properties.type==='overview'){return getPortalUrl()+'/portal/form/processInstance/'+$scope.properties.caseId+buildQueryString(appToken?{app:appToken}:null);}else{return $scope.properties.targetUrl;}};this.getTarget=function(){if($scope.properties.type==='page'){return'_top';}
return $scope.properties.target;};function buildQueryString(additionalParams){var params=angular.extend({},$scope.properties.urlParams||{},additionalParams||{});var queryString=httpParamSerializer.paramSerializer(params);return queryString?'?'+queryString:'';}
function getAppToken(paramName){if($scope.properties.appToken){return $scope.properties.appToken;}
var appTokenParam=getUrlParam(paramName);if(appTokenParam){return appTokenParam;}
var urlMatches=$window.top.location.href.match('\/apps\/([^/]*)\/');if(urlMatches){return urlMatches[1];}
return null;}
function getUrlParam(paramName){var paramValue=$location.absUrl().match('[\/?&]'+paramName+'=([^&#]*)($|[&#])');if(paramValue){return paramValue[1];}
return'';}
function getPortalUrl(){var locationHref=$location.absUrl();var indexOfPortal=locationHref.indexOf('/portal');if(indexOfPortal>=0){return locationHref.substring(0,indexOfPortal);}else{return'/bonita';}}},template:'<div class="text-{{ properties.alignment }}">\n  <a ng-class="properties.buttonStyle !== \'none\' ? \'btn btn-\' + properties.buttonStyle : \'\'" ng-href="{{ctrl.getHref()}}" target="{{ctrl.getTarget()}}" ng-bind-html="properties.text | uiTranslate"></a>\n</div>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('customProgressBar',function(){return{controllerAs:'ctrl',controller:function($scope){var format="YYYY-MM-DD HH:mm:ss";var values={};initialized=false;$scope.isInitialized=function(){return initialized;}
$scope.isExecuted=function(){return $scope.properties.value.archivedDate&&$scope.properties.value.archivedDate!=="";}
$scope.isAssigned=function(){return $scope.properties.value.assigned_date&&$scope.properties.value.assigned_date!=="";}
$scope.getSize=function(item){return values[item];}
$scope.$watch('$scope.properties.value',function(){initialized=false;init();})
function init(){values={};var ready=$scope.properties.value.reached_state_date;var assigned=$scope.properties.value.assigned_date;var archived=$scope.properties.value.archivedDate;if(archived&&archived!==""){var wait=moment(assigned,format).diff(moment(ready,format));var exec=moment(archived,format).diff(moment(assigned,format));var total=moment(archived,format).diff(moment(ready,format));values.wait=(wait/total)*100;values.exec=(exec/total)*100;values.total=Math.floor(moment.duration(total).asHours())+moment.utc(total).format(":mm:ss");}else{if(assigned&&assigned!==""){var wait=moment(assigned,format).diff(moment(ready,format));var exec=moment().diff(moment(assigned,format));var total=moment().diff(moment(ready,format));values.wait=(wait/total)*100;values.exec=(exec/total)*100;values.total=Math.floor(moment.duration(total).asHours())+moment.utc(total).format(":mm:ss");}else{var total=moment().diff(moment(ready,format));values.unas=100
values.total=Math.floor(moment.duration(total).asHours())+moment.utc(total).format(":mm:ss");}}
initialized=true;}},template:'<div class="progress" ng-if="isInitialized()">\n  <div ng-if="isAssigned()" class="progress-bar progress-bar-info" style="width: {{getSize(\'wait\')}}%">\n    <span class="sr-only">Waiting (warning)</span>\n  </div>\n  <div ng-if="isAssigned() && isExecuted()" class="progress-bar progress-bar-success" style="width: {{getSize(\'exec\')}}%">\n    <span class="sr-only">On Execution</span>\n  </div>\n  <div ng-if="!isAssigned()" class="progress-bar progress-bar-warning progress-bar-striped" style="width: {{getSize(\'unas\')}}%">\n    <span class="sr-only">Not yet Assigned</span>\n  </div>\n  <div ng-if="isAssigned() && !isExecuted()" class="progress-bar progress-bar-danger progress-bar-striped" style="width: {{getSize(\'exec\')}}%">\n    <span class="sr-only">Not yet Assigned</span>\n  </div>\n</div>\n<p>Total Hours:{{getSize(\'total\')}}</p>\n'};});(function(){try{return angular.module('bonitasoft.ui.widgets');}catch(e){return angular.module('bonitasoft.ui.widgets',[]);}})().directive('pbTable',function(){return{controllerAs:'ctrl',controller:function PbTableCtrl($scope){this.isArray=Array.isArray;this.isClickable=function(){return $scope.properties.isBound('selectedRow');};this.selectRow=function(row){if(this.isClickable()){$scope.properties.selectedRow=row;}};this.isSelected=function(row){return angular.equals(row,$scope.properties.selectedRow);}},template:'<div class="table-responsive">\n    <table class="table table-striped" ng-class="{\'table-hover\': ctrl.isClickable()}">\n        <thead>\n            <tr>\n                <th ng-repeat="header in properties.headers">\n                    {{ header | uiTranslate }}\n                </th>\n            </tr>\n        </thead>\n        <tbody ng-if="ctrl.isArray(properties.content) && ctrl.isArray(properties.columnsKey)">\n            <tr ng-repeat="row in properties.content" ng-click="ctrl.selectRow(row)" ng-class="{\'info\': ctrl.isSelected(row)}">\n                <td ng-repeat="column in properties.columnsKey track by $index">\n                    {{ $eval(column, row) | uiTranslate }}\n                </td>\n            </tr>\n        </tbody>\n        <tbody ng-if="ctrl.isArray(properties.content) && !ctrl.isArray(properties.columnsKey)">\n            <tr ng-repeat="row in properties.content" ng-click="ctrl.selectRow(row)" ng-class="{\'info\': ctrl.isSelected(row)}">\n                <td> {{ row | uiTranslate }} </td>\n            </tr>\n        </tbody>\n    </table>\n</div>\n'};});